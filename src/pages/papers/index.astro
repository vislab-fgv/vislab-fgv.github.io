---
import Layout from "../../layouts/Layout.astro";
import publications from "../../data/publications.json";
import type { ExtendedPublication } from "../../types/publication";
import { extendPublications } from "../../lib/utils";

const BUKET_BASE_URL = import.meta.env.BUCKET_BASE_URL;

const extendedPublications = extendPublications(publications).sort(
  (a, b) => new Date(b.pub_date).getTime() - new Date(a.pub_date).getTime()
);

const groupedPublications: { [key: string]: ExtendedPublication[] } =
  extendedPublications.reduce(
    (acc: { [key: string]: ExtendedPublication[] }, publication) => {
      const year = publication.year;
      if (!acc[year]) {
        acc[year] = [];
      }
      acc[year].push(publication);
      return acc;
    },
    {}
  );

  const keywordCounts: { [key: string]: number } = 
  publications.flatMap(paper => paper.keywords)
  .reduce((acc: { [key: string]: number }, keyword) => {
    acc[keyword] = (acc[keyword] || 0) + 1;
    return acc;
  }, {} as { [key: string]: number }); 
---

<Layout title="Papers">
  <div class="flex flex-col md:flex-row justify-between gap-6 px-4">
    <main class="w-full md:w-3/4">
      <div class="flex flex-col gap-4">
        {
          Object.keys(groupedPublications)
            .sort((a, b) => parseInt(b) - parseInt(a))
            .map((year) => (
              <div class="year-section" data-year={year}>
                <div class="flex flex-col gap-4">
                  <h2 class="header-year text-md font-semibold mb-4">{year}</h2>
                  {groupedPublications[year].map(
                    (publication: ExtendedPublication) => (
                      <div
                        class="publication-item flex flex-row md:flex-row gap-4"
                        data-year={publication.year}
                        data-title={publication.title.toLowerCase()}
                      >
                        <div class="max-w-32 min-w-32 w-full">
                          {publication.thumbnail && (
                            <a href={`/papers/${publication.web_name}`}>
                              <img
                                src={`${BUKET_BASE_URL}${publication.thumbnail}`}
                                alt={publication.title}
                                class="rounded-md w-full transition-all duration-300 hover:shadow-[0_0_15px_rgba(255,165,0,0.6)]"
                              />
                            </a>
                          )}
                        </div>
                        <div class="text-md text-base/5">
                          <a
                            href={`/papers/${publication.web_name}`}
                            class="publication-title hover:text-orange-500 hover:underline font-semibold pr-1"
                          >
                            {publication.title}
                          </a>
                          <div>
                            {publication.authors?.map((author, index) => (
                              <span>
                                <a
                                  href="#"
                                  class="author-name hover:text-orange-500 hover:underline"
                                >
                                  {author.first_name} {author.last_name}
                                </a>
                                {publication.authors &&
                                  index < publication.authors.length - 1 &&
                                  ","}
                              </span>
                            ))}
                          </div>
                          <p class="inline italic venue-name">
                            {publication.venue?.full_name}
                          </p>
                          <p class="inline">, {publication.year}</p>
                          <p>
                            <a
                              href={`${BUKET_BASE_URL}${publication.pdf}`}
                              class="hover:underline hover:text-orange-500"
                            >
                              PDF
                            </a>
                          </p>
                        </div>
                      </div>
                    )
                  )}
                </div>
              </div>
            ))
        }
      </div>
    </main>
    <aside class="md:w-2/5 md:sticky md:top-6 h-fit">
      <div class="flex flex-col gap-4 p-4 bg-gray-50 rounded-lg">
        <!-- Solo el input de búsqueda -->
        <div class="w-full">
          <p class="bold">Search</p>
          <input
            type="text"
            id="search-input"
            class="w-full h-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500"
            placeholder="Search publications..."
          />
        </div>

        <div>
          <h3 class="mb-2 text-sm font-medium text-gray-700">
            Filtros
          </h3>
          <div id="filters" class="flex flex-wrap gap-2 text-xs">
            {Object.entries(keywordCounts).map(([keyword, count]) => (
              <button 
                data-keyword={keyword}
                class="filter-btn h-6 px-4 border rounded-full flex items-center justify-center transition-colors border-gray-300 hover:bg-gray-100 hover:border-gray-500"
              >
                {keyword} ({count})
              </button>
            ))}
          </div>
        </div>    

        <div>
          <h3 class="mb-2 text-sm font-medium text-gray-700">
            Research Domains
          </h3>
          <div class="flex flex-wrap gap-2 text-xs">
            <button
              class="h-6 px-4 border rounded-full flex items-center justify-center transition-colors border-gray-300 hover:bg-gray-100 hover:border-gray-500"
            >
              Visualization
            </button>
          </div>
        </div>
        <div>
          <h3 class="mb-2 text-sm font-medium text-gray-700">Methodologies</h3>
          <div class="flex flex-wrap gap-2 text-xs">
            <button
              class="h-6 px-4 border rounded-full flex items-center justify-center transition-colors border-gray-300 hover:bg-gray-100 hover:border-gray-500"
            >
              Visualization
            </button>
          </div>
        </div>
        <div>
          <h3 class="mb-2 text-sm font-medium text-gray-700">
            Applications & Contexts
          </h3>
          <div class="flex flex-wrap gap-2 text-xs">
            <button
              class="h-6 px-4 border rounded-full flex items-center justify-center transition-colors border-gray-300 hover:bg-gray-100 hover:border-gray-500"
            >
              Visualization
            </button>
          </div>
        </div>
        <div>
          <h3 class="mb-2 text-sm font-medium text-gray-700">
            Technical Approaches
          </h3>
          <div class="flex flex-wrap gap-2 text-xs">
            <button
              class="h-6 px-4 border rounded-full flex items-center justify-center transition-colors border-gray-300 hover:bg-gray-100 hover:border-gray-500"
            >
              Visualization
            </button>
          </div>
        </div>
      </div>
    </aside>
  </div>
</Layout>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const searchInput = document.getElementById(
      "search-input"
    ) as HTMLInputElement;
    const publicationItems = document.querySelectorAll(".publication-item");
    const yearSections = document.querySelectorAll(".year-section");

    if (searchInput) {
      searchInput.addEventListener("input", function () {
        const searchTerm = this.value.toLowerCase().trim();
        filterPublications(searchTerm);
      });
    }

    // Función simplificada para filtrar solo por término de búsqueda
    function filterPublications(searchTerm: string = "") {
      publicationItems.forEach((item) => {
        const itemYear = item.getAttribute("data-year") ?? "";

        // Verificar si coincide con el término de búsqueda
        let matchesSearch = true;
        if (searchTerm !== "") {
          // Método 1: Usar el atributo data-title
          const title = item.getAttribute("data-title") || "";

          // Método 2: Buscar directamente en el elemento con la clase publication-title
          const titleElement = item.querySelector(".publication-title");
          const titleText = titleElement
            ? titleElement.textContent?.toLowerCase() || ""
            : "";

          // Recopilar información de autores
          const authorElements = item.querySelectorAll(".author-name");
          let authors = "";
          authorElements.forEach((el) => {
            authors += el.textContent?.toLowerCase() + " ";
          });

          // Recopilar información de venue
          const venueElement = item.querySelector(".venue-name");
          const venue = venueElement?.textContent?.toLowerCase() || "";

          // Un item coincide si cualquiera de sus campos contiene el término de búsqueda
          matchesSearch =
            title.includes(searchTerm) ||
            titleText.includes(searchTerm) ||
            authors.includes(searchTerm) ||
            venue.includes(searchTerm) ||
            itemYear.includes(searchTerm);
        }

        // Mostrar u ocultar según coincidencia con el término de búsqueda
        if (matchesSearch) {
          item.classList.remove("hidden");
        } else {
          item.classList.add("hidden");
        }
      });

      // Actualizar la visibilidad de las secciones de año
      updateYearSectionsVisibility();
    }

    // Función para actualizar la visibilidad de las secciones de año
    function updateYearSectionsVisibility() {
      yearSections.forEach((section) => {
        const publications = section.querySelectorAll(".publication-item");

        // Verificar si hay publicaciones visibles en esta sección
        let hasVisiblePublications = false;
        publications.forEach((pub) => {
          if (!pub.classList.contains("hidden")) {
            hasVisiblePublications = true;
          }
        });

        // Mostrar u ocultar la sección completa y su encabezado
        if (hasVisiblePublications) {
          section.classList.remove("hidden");
          const header = section.querySelector(".header-year");
          if (header) header.classList.remove("hidden");
        } else {
          section.classList.add("hidden");
          const header = section.querySelector(".header-year");
          if (header) header.classList.add("hidden");
        }
      });
    }


  });
</script>
